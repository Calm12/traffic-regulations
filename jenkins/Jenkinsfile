properties([disableConcurrentBuilds()])

def HOST_UID_VAR
def HOST_GID_VAR

pipeline {
    agent {
        label 'master'
    }
    triggers {
        pollSCM('* * * * *')
    }
    stages {
        stage('configure') {
            steps {
                sh 'cp dist/docker/.env.template dist/docker/.env'
            }
        }
        stage('last docker stop') {
            steps {
                dir('target/build/docker') {
                    sh 'docker-compose down' //try use "|| true"
                }
            }
        }
        stage('maven build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('docker build and start') {
            steps {
                script {
                    HOST_UID_VAR = sh(
                        returnStdout: true,
                        script: 'id -u'
                    ).trim()
                    HOST_GID_VAR = sh(
                        returnStdout: true,
                        script: 'id -g'
                    ).trim()
                }
                dir('target/build/docker') {
                    withEnv(["HOST_UID=${HOST_UID_VAR}", "HOST_GID=${PHOST_UID_VAR}"]) {
                        sh 'echo $HOST_UID'
                        sh 'echo $HOST_GID'
                        sh 'docker-compose build --no-cache'
                        sh 'docker-compose up -d'
                    }
                }
            }
        }
    }
}